[
  {
    "id": "inject1",
    "type": "inject",
    "z": "flow1",
    "name": "Fetch Weather (5min)",
    "props": [
      { "p": "payload" },
      { "p": "topic", "vt": "str" }
    ],
    "repeat": "300",
    "once": true,
    "topic": "weather",
    "payload": "{\"city\":\"Manila\",\"units\":\"metric\"}",
    "payloadType": "json",
    "x": 150,
    "y": 120,
    "wires": [["fn_url"]]
  },
  {
    "id": "fn_url",
    "type": "function",
    "z": "flow1",
    "name": "Build OWM URL",
    "func": "const apiKey = \"YOUR_OPENWEATHERMAP_API_KEY\";\nconst city = msg.payload.city;\nconst units = msg.payload.units;\nmsg.url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=${units}&appid=${apiKey}`;\nmsg.city = city;\nmsg.units = units;\nreturn msg;",
    "outputs": 1,
    "x": 370,
    "y": 120,
    "wires": [["http1"]]
  },
  {
    "id": "http1",
    "type": "http request",
    "z": "flow1",
    "name": "OpenWeatherMap API",
    "method": "GET",
    "ret": "obj",
    "paytoqs": "ignore",
    "url": "",
    "x": 600,
    "y": 120,
    "wires": [["fn_parse"]]
  },
  {
    "id": "fn_parse",
    "type": "function",
    "z": "flow1",
    "name": "Parse Weather Data",
    "func": "const data = msg.payload;\nconst city = msg.city;\nconst out = {\n  city: city,\n  temperature: data.main.temp,\n  humidity: data.main.humidity,\n  description: data.weather[0].description,\n  timestamp: new Date().toISOString()\n};\nmsg.payload = out;\nmsg.topic = `openweather/${city}`;\nreturn msg;",
    "outputs": 1,
    "x": 850,
    "y": 120,
    "wires": [["mqtt_out","debug1","g_temp","g_hum","t_desc","c_temp","c_hum"]]
  },
  {
    "id": "mqtt_out",
    "type": "mqtt out",
    "z": "flow1",
    "name": "Publish Weather",
    "topic": "",
    "qos": "",
    "retain": "",
    "broker": "mqtt_broker",
    "x": 1130,
    "y": 80,
    "wires": []
  },
  {
    "id": "debug1",
    "type": "debug",
    "z": "flow1",
    "name": "Debug Weather",
    "active": true,
    "tosidebar": true,
    "complete": "payload",
    "x": 1130,
    "y": 120,
    "wires": []
  },
  {
    "id": "g_temp",
    "type": "ui_gauge",
    "z": "flow1",
    "name": "Temperature Gauge",
    "group": "grp_weather",
    "order": 1,
    "width": 0,
    "height": 0,
    "gtype": "gage",
    "title": "Temperature (°C)",
    "label": "°C",
    "format": "{{msg.payload.temperature}}",
    "min": 0,
    "max": 50,
    "colors": ["#00b500","#e6e600","#ca3838"],
    "seg1": "",
    "seg2": "",
    "x": 1150,
    "y": 160,
    "wires": []
  },
  {
    "id": "g_hum",
    "type": "ui_gauge",
    "z": "flow1",
    "name": "Humidity Gauge",
    "group": "grp_weather",
    "order": 2,
    "title": "Humidity (%)",
    "label": "%",
    "format": "{{msg.payload.humidity}}",
    "min": 0,
    "max": 100,
    "colors": ["#00b500","#e6e600","#ca3838"],
    "x": 1150,
    "y": 200,
    "wires": []
  },
  {
    "id": "t_desc",
    "type": "ui_text",
    "z": "flow1",
    "group": "grp_weather",
    "order": 3,
    "name": "Weather Description",
    "label": "Condition",
    "format": "{{msg.payload.description}}",
    "layout": "row-spread",
    "x": 1160,
    "y": 240,
    "wires": []
  },
  {
    "id": "c_temp",
    "type": "ui_chart",
    "z": "flow1",
    "name": "Temperature Chart",
    "group": "grp_weather",
    "order": 4,
    "label": "Temperature History",
    "xformat": "HH:mm:ss",
    "ymin": "0",
    "ymax": "50",
    "x": 1160,
    "y": 280,
    "wires": []
  },
  {
    "id": "c_hum",
    "type": "ui_chart",
    "z": "flow1",
    "name": "Humidity Chart",
    "group": "grp_weather",
    "order": 5,
    "label": "Humidity History",
    "xformat": "HH:mm:ss",
    "ymin": "0",
    "ymax": "100",
    "x": 1160,
    "y": 320,
    "wires": []
  },
  {
    "id": "mqtt_broker",
    "type": "mqtt-broker",
    "name": "Local Broker",
    "broker": "localhost",
    "port": "1883"
  },
  {
    "id": "grp_weather",
    "type": "ui_group",
    "name": "Weather Dashboard",
    "tab": "tab1",
    "order": 1,
    "disp": true,
    "width": "6"
  },
  {
    "id": "tab1",
    "type": "ui_tab",
    "name": "OpenWeather",
    "icon": "dashboard",
    "order": 1
  }
]
